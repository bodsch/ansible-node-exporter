---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: update package cache
  package:
    update_cache: true

- name: define delegate instance for download handling
  set_fact:
    node_exporter_delegate_to: "{{ ansible_host }}"
    node_exporter_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/node_exporter', true) }}/{{ node_exporter_version }}"
  when:
    - node_exporter_direct_download

- name: install dependency
  package:
    name: "{{ node_exporter_requirements }}"
    state: present

- name: detect our installation path '{{ node_exporter_install_path | dirname }}'
  stat:
    path: "{{ node_exporter_install_path | dirname }}"
    get_checksum: false
  register: stat_node_exporter_path
  ignore_errors: true

- name: old installation
  block:
    - name: stop old service
      service:
        name: node_exporter
        state: stopped
        enabled: false

    - name: remove installed node_exporter
      file:
        state: absent
        path: "{{ stat_node_exporter_path.stat.path }}"
  when:
    - stat_node_exporter_path is defined
    - stat_node_exporter_path.stat is defined
    - stat_node_exporter_path.stat.islnk is defined
    - stat_node_exporter_path.stat.islnk

- name: detect installed node_exporter binary
  stat:
    path: "{{ node_exporter_install_path }}/node_exporter"
  register: stat_node_exporter_binary

- name: create download directory
  become: false
  delegate_to: "{{ node_exporter_delegate_to }}"
  file:
    path: "{{ node_exporter_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: user and group handling
  block:
    - name: create node_exporter group
      group:
        name: "{{ node_exporter_system_group }}"
        state: present
        system: true

    - name: create node_exporter user
      user:
        name: "{{ node_exporter_system_user }}"
        groups: "{{ node_exporter_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent
  when:
    - node_exporter_system_user != "root"

- name: create install directory
  file:
    path: "{{ node_exporter_install_path }}"
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0755

- name: fix directory rights for {{ node_exporter_install_path | dirname }}
  file:
    path: "{{ node_exporter_install_path | dirname }}"
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0755
    recurse: true

- name: merge node_exporter tls_server configuration between defaults and custom
  set_fact:
    node_exporter_tls_server: "{{ node_exporter_defaults_tls_server |
      combine( node_exporter_tls_server, recursive=True) }}"

- name: merge node_exporter http_server configuration between defaults and custom
  set_fact:
    node_exporter_http_server: "{{ node_exporter_defaults_http_server |
      combine( node_exporter_http_server, recursive=True ) }}"

- name: merge node_exporter basic_auth_users configuration between defaults and custom
  set_fact:
    node_exporter_basic_auth_users: "{{ node_exporter_defaults_basic_auth_users |
      combine( node_exporter_basic_auth_users, recursive=True ) }}"

- name: merge node_exporter collectors configuration between defaults and custom
  set_fact:
    node_exporter_collectors: "{{ node_exporter_defaults_collectors |
      combine( node_exporter_collectors, recursive=True ) }}"

...
